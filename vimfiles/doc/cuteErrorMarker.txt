
*cuteErrorMarker.txt*  Diplaying a mark on searched lines, compile error and warnings

                             Cute Error Marker plugin~

1. Presentation                         |CuteErrorPresentation|
2. Commands                             |CuteErrorCommands|
    1.1 |:MarkErrors|
    1.2 |:CleanupmarkErrors|
    1.3 |:RemoveErrorMarkersHook|
    1.4 :make
    1.5 :grep
3. Configuration variables              |CuteErrorConfiguration|
    3.1 |g:cuteErrorMarkerBrutalSignRemoval|
    3.2 |g:cuteerrors_no_autoload|
    3.3 |g:cuteerrors_no_baloons|
4. Changelog                            |CuteErrorChangelog|

==============================================================================
*CuteErrorPresentation*
1. Presentation~
    This plugin will place a mark on each line where a compilation
    error/warning happenned after a |:make| (or derivative) command happen. It
    also place a mark on search when a |:grep| (or derivative) command is
    performed. It allow a quicker overlook of problems/search.

Require~
>
    set nocompatible
<
        somewhere on your .vimrc

==============================================================================
*CuteErrorCommands*
2. Commands~

                                                   *MarkErrors* *:MarkErrors*  >
 :MarkErrors
<
   Place markers near line from the error list

                                      *CleanupMarkErrors* *:CleanupMarkErrors*  >
 :CleanupMarkErrors
<
   Remove all the markers, If too slow, consider defining 
   |g:cuteErrorMarkerBrutalSignRemoval|.

                            *RemoveErrorMarkersHook* *:RemoveErrorMarkersHook*  >
 :RemoveErrorMarkersHook
<
   Remove the autocommand for sign placing
  >
 :make
<
   Place marker automatically by default
>
 :grep
<
   Place search marke automatically by default

==============================================================================
*CuteErrorConfiguration*
3. Configuration variables~
                                            *g:cuteErrorMarkerBrutalSignRemoval*  >
    let g:cuteErrorMarkerBrutalSignRemoval = 1
<
   If you have many errors, removing them might be uterly slow,
   you might want to set this variable to fasten things up. Warning,
   it may conflict with other plugins using the sign functionnality,
   as it will remove _ALL_ signs on refresh.

                                                      *g:cuteerrors_no_autoload*  >
    let g:cuteerrors_no_autoload = 1
<
   if you don't want the automatic placing of markers after a make,
   you can define this variable.
                                                       *g:cuteerrors_no_baloons*  >
    let g:cuteerrors_no_baloons = 1
<
   If you don't want the balloon to display error text, define this
   variable

==============================================================================
*CuteErrorChangelog*
4. Changelog~

 * 1.5  :- Added marks for grep search
 * 1.4.4:- Changed sign highlighting
 * 1.4.3:- Changing 'sign' verification mode
 * 1.4.2:- Avoid loading script if :signs command is not available.
 * 1.4.1:- No checking that the balloon option is present
 * 1.4  :- Added ballon to display error messages when overing
           an error line.
 * 1.3.2:- Changed loading of files using globpath()
 * 1.3.1:- Changed data retrievel function to getqflist().
 * 1.3  :- Taking into account "Documents and Settings" folder...
         - Adding icons source from $VIM or $VIMRUNTIME
         - Checking the nocompatible option (the only one required)
 * 1.2  :- Fixed problems with subdirectory
         - Warning detection is now case insensitive
 * 1.1  :- Bug fix when make returned only an error
         - reduced flickering by avoiding redraw when not needed.
 * 1.0  : Original version

Thanks:~
 - Ingo Karkat - Suggestion of signs check enhancement
 - A. S. Budden for the globpath function
 - BenoÃ®t Pierre for pointing the function getqflist() and
   providing a patch.
 - Yazilim Duzenleci for stressing the plugin and forcing
   me to make it more general.

