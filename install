#!/usr/bin/env bash

# defaults
developer=0
gvimrc=0
clean=0
nvim=0

startvimrc="vimrc"

# usage
function usage() {
    echo "use: $0 [options]"
    echo "  -d  install development config (else simpler config)"
    echo "  -g  also install gvimrc (ignore for nvim)"
    echo "  -c  do clean installation"
    echo "  -n  install for nvim"
    echo "  -h  show this usage"
    exit 0
}

# process options
while getopts ":dgcnh" arg; do
    case "$arg" in
        d) developer=1 ;;
        g) gvimrc=1 ;;
        c) clean=1 ;;
        n) nvim=1 ;;
        h) usage ;;
        *) usage ;;
    esac
done

if [[ $developer -eq 1 ]]; then
    startvimrc="vimrc-developer"

    if command -v go > /dev/null 2>&1; then
        go get -u github.com/stamblerre/gocode
    fi
fi

if [[ $nvim -eq 1 ]]; then
    configpath="$HOME/.config/nvim"
    vimrcfile="$HOME/.config/nvim/init.vim"
    gvimrcfile=""
else
    configpath="$HOME/.vim"
    vimrcfile="$HOME/.vimrc"
    gvimrcfile="$HOME/.gvimrc"
fi

# clean current vim stuff
if [[ $clean -ne 0 ]]; then
    [[ "$configpath" != "" ]] && rm -rf "$configpath"
    [[ "$vimrcfile" != "" ]] && rm -f "$vimrcfile"
    [[ "$gvimrcfile" != "" ]] && rm -f "$gvimrcfile"
    [[ $nvim -eq 1 ]] && rm -rf "$HOME/.local/share/nvim"
fi

uname=$(uname)

if [[ "$uname" == "Linux" ]]; then
    cd "$(dirname "$(readlink -f "$0")")" || exit 1
else
    cd "$(cd "$(dirname "$0")"; pwd -P)" || exit 1
fi

# put the vimfiles in place
[[ ! -d "$configpath" ]] && mkdir -p "$configpath"
cp -a ./vimfiles/* "$configpath/"
# copy new vimrc
cp -a ./$startvimrc "$vimrcfile"
# copy gvimrc when requested
[[ $gvimrc -eq 1 ]] && [[ "$gvimrcfile" != "" ]] && cp -a ./gvimrc "$gvimrcfile"

if [[ $nvim -eq 1 ]]; then
    nvim +PlugInstall +qall
    nvim +UpdateRemotePlugins +qall
else
    vim +PlugInstall +qall
fi
if [[ $clean -eq 0 ]]; then
    if [[ $nvim -eq 1 ]]; then
        nvim +PlugUpdate +qall
        nvim +UpdateRemotePlugins +qall
    else
        vim +PlugUpdate +qall
    fi
fi
